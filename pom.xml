<?xml version="1.0" encoding="UTF-8"?>
<!-- 
Copyright 2014 EUBrazilCC (EU‐Brazil Cloud Connect)

Licensed under the EUPL, Version 1.1 or - as soon they will be approved by 
the European Commission - subsequent versions of the EUPL (the "Licence");
You may not use this work except in compliance with the Licence.
You may obtain a copy of the Licence at:

  http://ec.europa.eu/idabc/eupl

Unless required by applicable law or agreed to in writing, software 
distributed under the Licence is distributed on an "AS IS" basis,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the Licence for the specific language governing permissions and 
limitations under the Licence.

This product combines work with different licenses. See the "NOTICE" text
file for details on the various modules and licenses.
The "NOTICE" text file is part of the distribution. Any derivative works
that you distribute must include a readable copy of the "NOTICE" text file.
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>eu.eubrazilcc.lvl</groupId>
	<artifactId>leishmaniasis-virtual-lab</artifactId>
	<version>0.0.1</version>
	<packaging>pom</packaging>

	<name>leishmaniasis-virtual-laboratory - BOM</name>
	<description>EUBrazilCC - Leishmaniasis Virtual Laboratory (LVL) "bill of materials" (BOM)</description>
	<url>http://eubrazilcloudconnect.eu/</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<lvl.version>${project.version}</lvl.version>
		<logback.version>1.1.1</logback.version>
		<slf4j.version>1.7.6</slf4j.version>
		<mongodb.driver.version>2.11.4</mongodb.driver.version>
		<mongodb.morphia.version>0.106</mongodb.morphia.version>
		<jackson-mapper.version>1.9.13</jackson-mapper.version>		
	</properties>

	<dependencyManagement>
		<dependencies>

			<!-- Apache Commons: Collection of open source reusable Java components -->

			<dependency> <!-- Command-line interface utilities -->
				<groupId>commons-cli</groupId>
				<artifactId>commons-cli</artifactId>
				<version>1.2</version>
			</dependency>

			<dependency>
				<groupId>commons-codec</groupId> <!-- Provides Base64/Base32 encoding/decoding -->
				<artifactId>commons-codec</artifactId>
				<version>1.9</version>
			</dependency>

			<dependency> <!-- Configuration handling -->
				<groupId>commons-configuration</groupId>
				<artifactId>commons-configuration</artifactId>
				<version>1.10</version>
			</dependency>

			<dependency> <!-- Extends the Java Collections Framework: needed by commons-configuration -->
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>3.2.1</version>
			</dependency>

			<dependency> <!-- I/O routines -->
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>2.4</version>
			</dependency>

			<!-- Apache HttpComponents: HTTP/1.1 compliant HTTP agents (version must 
				coincide with the version BioJava uses) -->

			<dependency> <!-- HTTP client -->
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.3.1</version>
			</dependency>
			
			<dependency> <!-- Client fluent API -->
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>fluent-hc</artifactId>
				<version>4.3.1</version>
			</dependency>
			
			<!-- Apache Oltu: implements OAuth 2.0 -->
			
			<dependency>
				<groupId>org.apache.oltu.oauth2</groupId>
				<artifactId>org.apache.oltu.oauth2.authzserver</artifactId>
				<version>1.0.0</version>
			</dependency>
			
			<dependency>
				<groupId>org.apache.oltu.oauth2</groupId>
				<artifactId>org.apache.oltu.oauth2.resourceserver</artifactId>
				<version>1.0.0</version>
			</dependency>
			
			<dependency>
				<groupId>org.apache.oltu.oauth2</groupId>
				<artifactId>org.apache.oltu.oauth2.client</artifactId>
				<version>1.0.0</version>
			</dependency>
			
			<dependency>
				<groupId>org.apache.oltu.oauth2</groupId>
				<artifactId>org.apache.oltu.oauth2.dynamicreg.server</artifactId>
				<version>1.0.0</version>
			</dependency>

			<dependency>
				<groupId>org.apache.oltu.oauth2</groupId>
				<artifactId>org.apache.oltu.oauth2.dynamicreg.client</artifactId>
				<version>1.0.0</version>
			</dependency>

			<!-- Apache Tika: a toolkit for detecting and extracting metadata and 
				structured text content from various documents using existing parser libraries -->

			<dependency> <!-- core -->
				<groupId>org.apache.tika</groupId>
				<artifactId>tika-core</artifactId>
				<version>1.5</version>
			</dependency>

			<!-- Guava: Google Core Libraries for Java -->

			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>16.0</version>
			</dependency>

			<!-- JSR305 Annotations from Findbugs -->

			<dependency>
				<groupId>com.google.code.findbugs</groupId>
				<artifactId>jsr305</artifactId>
				<version>2.0.3</version>
			</dependency>

			<!-- The javax.inject API: declare this dependency (provided) to be able 
				to compile an application when no specific implementation of dependency injection 
				is required (provides annotations, for example, @Inject) -->
			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>1</version>
			</dependency>
			
			<!-- Java Servlet API 3.0: declare this dependency (provided) to be able to compile
				servlet-based applications when no servlet container is available -->
			
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>3.0.1</version>
			</dependency>

			<!-- JAX-RS API: declare this dependency (provided) to be able to compile 
				an application when no specific implementation of JAX-RS is required -->

			<dependency>
				<groupId>javax.ws.rs</groupId>
				<artifactId>javax.ws.rs-api</artifactId>
				<version>2.0</version>
			</dependency>

			<!-- Joda Time: Date and time library to replace JDK date handling -->

			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>2.3</version>
			</dependency>			
			
			<!-- MongoDB Java driver -->
			
			<dependency>
				<groupId>org.mongodb</groupId>
				<artifactId>mongo-java-driver</artifactId>
				<version>${mongodb.driver.version}</version>
			</dependency>
			
			<!-- Morphia: library for mapping Java objects to/from MongoDB -->
			
			<dependency>
				<groupId>org.mongodb.morphia</groupId>
				<artifactId>morphia</artifactId>
				<version>${mongodb.morphia.version}</version>
			</dependency>
			
			<!-- Data binding package built on Jackson JSON processor -->
			
			<dependency>
				<groupId>org.codehaus.jackson</groupId>
				<artifactId>jackson-mapper-asl</artifactId>
				<version>${jackson-mapper.version}</version>
			</dependency>

			<!-- Logback -->

			<dependency> <!-- classic module (uses the SLF4J API) -->
				<groupId>ch.qos.logback</groupId>
				<artifactId>logback-classic</artifactId>
				<version>${logback.version}</version>
			</dependency>			

			<!-- SLF4J logging framework -->

			<dependency> <!-- java.util.logging (jul) bridge -->
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>${slf4j.version}</version>
			</dependency>
			
			<!-- LVL modules -->
			
			<dependency>
				<groupId>eu.eubrazilcc.lvl</groupId>
				<artifactId>lvl-core</artifactId>
				<version>${lvl.version}</version>
			</dependency>
			
			<dependency>
				<groupId>eu.eubrazilcc.lvl</groupId>
				<artifactId>lvl-storage</artifactId>
				<version>${lvl.version}</version>
			</dependency>
			
			<dependency>
				<groupId>eu.eubrazilcc.lvl</groupId>
				<artifactId>lvl-service</artifactId>
				<version>${lvl.version}</version>
			</dependency>
			
			<dependency>
				<groupId>eu.eubrazilcc.lvl</groupId>
				<artifactId>lvl-auth</artifactId>
				<version>${lvl.version}</version>
			</dependency>

		</dependencies>
	</dependencyManagement>

	<modules>
		<module>lvl-project</module>
	</modules>

</project>