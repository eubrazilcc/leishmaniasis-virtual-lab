/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package eu.eubrazilcc.lvl.storage.avro.messages;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class FetchConfig extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FetchConfig\",\"namespace\":\"eu.eubrazilcc.lvl.storage.avro.messages\",\"fields\":[{\"name\":\"ids\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null},{\"name\":\"history\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"QueryHistory\",\"fields\":[{\"name\":\"webEnv\",\"type\":\"string\"},{\"name\":\"queryKey\",\"type\":\"string\"}]}],\"default\":null},{\"name\":\"start\",\"type\":\"int\",\"default\":0},{\"name\":\"maximum\",\"type\":\"int\",\"default\":1},{\"name\":\"outputDir\",\"type\":\"string\"},{\"name\":\"format\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
   private java.util.List<java.lang.CharSequence> ids;
   private eu.eubrazilcc.lvl.storage.avro.messages.QueryHistory history;
   private int start;
   private int maximum;
   private java.lang.CharSequence outputDir;
   private java.lang.CharSequence format;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public FetchConfig() {}

  /**
   * All-args constructor.
   */
  public FetchConfig(java.util.List<java.lang.CharSequence> ids, eu.eubrazilcc.lvl.storage.avro.messages.QueryHistory history, java.lang.Integer start, java.lang.Integer maximum, java.lang.CharSequence outputDir, java.lang.CharSequence format) {
    this.ids = ids;
    this.history = history;
    this.start = start;
    this.maximum = maximum;
    this.outputDir = outputDir;
    this.format = format;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ids;
    case 1: return history;
    case 2: return start;
    case 3: return maximum;
    case 4: return outputDir;
    case 5: return format;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ids = (java.util.List<java.lang.CharSequence>)value$; break;
    case 1: history = (eu.eubrazilcc.lvl.storage.avro.messages.QueryHistory)value$; break;
    case 2: start = (java.lang.Integer)value$; break;
    case 3: maximum = (java.lang.Integer)value$; break;
    case 4: outputDir = (java.lang.CharSequence)value$; break;
    case 5: format = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'ids' field.
   */
  public java.util.List<java.lang.CharSequence> getIds() {
    return ids;
  }

  /**
   * Sets the value of the 'ids' field.
   * @param value the value to set.
   */
  public void setIds(java.util.List<java.lang.CharSequence> value) {
    this.ids = value;
  }

  /**
   * Gets the value of the 'history' field.
   */
  public eu.eubrazilcc.lvl.storage.avro.messages.QueryHistory getHistory() {
    return history;
  }

  /**
   * Sets the value of the 'history' field.
   * @param value the value to set.
   */
  public void setHistory(eu.eubrazilcc.lvl.storage.avro.messages.QueryHistory value) {
    this.history = value;
  }

  /**
   * Gets the value of the 'start' field.
   */
  public java.lang.Integer getStart() {
    return start;
  }

  /**
   * Sets the value of the 'start' field.
   * @param value the value to set.
   */
  public void setStart(java.lang.Integer value) {
    this.start = value;
  }

  /**
   * Gets the value of the 'maximum' field.
   */
  public java.lang.Integer getMaximum() {
    return maximum;
  }

  /**
   * Sets the value of the 'maximum' field.
   * @param value the value to set.
   */
  public void setMaximum(java.lang.Integer value) {
    this.maximum = value;
  }

  /**
   * Gets the value of the 'outputDir' field.
   */
  public java.lang.CharSequence getOutputDir() {
    return outputDir;
  }

  /**
   * Sets the value of the 'outputDir' field.
   * @param value the value to set.
   */
  public void setOutputDir(java.lang.CharSequence value) {
    this.outputDir = value;
  }

  /**
   * Gets the value of the 'format' field.
   */
  public java.lang.CharSequence getFormat() {
    return format;
  }

  /**
   * Sets the value of the 'format' field.
   * @param value the value to set.
   */
  public void setFormat(java.lang.CharSequence value) {
    this.format = value;
  }

  /** Creates a new FetchConfig RecordBuilder */
  public static eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig.Builder newBuilder() {
    return new eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig.Builder();
  }
  
  /** Creates a new FetchConfig RecordBuilder by copying an existing Builder */
  public static eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig.Builder newBuilder(eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig.Builder other) {
    return new eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig.Builder(other);
  }
  
  /** Creates a new FetchConfig RecordBuilder by copying an existing FetchConfig instance */
  public static eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig.Builder newBuilder(eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig other) {
    return new eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig.Builder(other);
  }
  
  /**
   * RecordBuilder for FetchConfig instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FetchConfig>
    implements org.apache.avro.data.RecordBuilder<FetchConfig> {

    private java.util.List<java.lang.CharSequence> ids;
    private eu.eubrazilcc.lvl.storage.avro.messages.QueryHistory history;
    private int start;
    private int maximum;
    private java.lang.CharSequence outputDir;
    private java.lang.CharSequence format;

    /** Creates a new Builder */
    private Builder() {
      super(eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ids)) {
        this.ids = data().deepCopy(fields()[0].schema(), other.ids);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.history)) {
        this.history = data().deepCopy(fields()[1].schema(), other.history);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.start)) {
        this.start = data().deepCopy(fields()[2].schema(), other.start);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.maximum)) {
        this.maximum = data().deepCopy(fields()[3].schema(), other.maximum);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.outputDir)) {
        this.outputDir = data().deepCopy(fields()[4].schema(), other.outputDir);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.format)) {
        this.format = data().deepCopy(fields()[5].schema(), other.format);
        fieldSetFlags()[5] = true;
      }
    }
    
    /** Creates a Builder by copying an existing FetchConfig instance */
    private Builder(eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig other) {
            super(eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig.SCHEMA$);
      if (isValidValue(fields()[0], other.ids)) {
        this.ids = data().deepCopy(fields()[0].schema(), other.ids);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.history)) {
        this.history = data().deepCopy(fields()[1].schema(), other.history);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.start)) {
        this.start = data().deepCopy(fields()[2].schema(), other.start);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.maximum)) {
        this.maximum = data().deepCopy(fields()[3].schema(), other.maximum);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.outputDir)) {
        this.outputDir = data().deepCopy(fields()[4].schema(), other.outputDir);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.format)) {
        this.format = data().deepCopy(fields()[5].schema(), other.format);
        fieldSetFlags()[5] = true;
      }
    }

    /** Gets the value of the 'ids' field */
    public java.util.List<java.lang.CharSequence> getIds() {
      return ids;
    }
    
    /** Sets the value of the 'ids' field */
    public eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig.Builder setIds(java.util.List<java.lang.CharSequence> value) {
      validate(fields()[0], value);
      this.ids = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'ids' field has been set */
    public boolean hasIds() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'ids' field */
    public eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig.Builder clearIds() {
      ids = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'history' field */
    public eu.eubrazilcc.lvl.storage.avro.messages.QueryHistory getHistory() {
      return history;
    }
    
    /** Sets the value of the 'history' field */
    public eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig.Builder setHistory(eu.eubrazilcc.lvl.storage.avro.messages.QueryHistory value) {
      validate(fields()[1], value);
      this.history = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'history' field has been set */
    public boolean hasHistory() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'history' field */
    public eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig.Builder clearHistory() {
      history = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'start' field */
    public java.lang.Integer getStart() {
      return start;
    }
    
    /** Sets the value of the 'start' field */
    public eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig.Builder setStart(int value) {
      validate(fields()[2], value);
      this.start = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'start' field has been set */
    public boolean hasStart() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'start' field */
    public eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig.Builder clearStart() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'maximum' field */
    public java.lang.Integer getMaximum() {
      return maximum;
    }
    
    /** Sets the value of the 'maximum' field */
    public eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig.Builder setMaximum(int value) {
      validate(fields()[3], value);
      this.maximum = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'maximum' field has been set */
    public boolean hasMaximum() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'maximum' field */
    public eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig.Builder clearMaximum() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'outputDir' field */
    public java.lang.CharSequence getOutputDir() {
      return outputDir;
    }
    
    /** Sets the value of the 'outputDir' field */
    public eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig.Builder setOutputDir(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.outputDir = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'outputDir' field has been set */
    public boolean hasOutputDir() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'outputDir' field */
    public eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig.Builder clearOutputDir() {
      outputDir = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'format' field */
    public java.lang.CharSequence getFormat() {
      return format;
    }
    
    /** Sets the value of the 'format' field */
    public eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig.Builder setFormat(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.format = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'format' field has been set */
    public boolean hasFormat() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'format' field */
    public eu.eubrazilcc.lvl.storage.avro.messages.FetchConfig.Builder clearFormat() {
      format = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    public FetchConfig build() {
      try {
        FetchConfig record = new FetchConfig();
        record.ids = fieldSetFlags()[0] ? this.ids : (java.util.List<java.lang.CharSequence>) defaultValue(fields()[0]);
        record.history = fieldSetFlags()[1] ? this.history : (eu.eubrazilcc.lvl.storage.avro.messages.QueryHistory) defaultValue(fields()[1]);
        record.start = fieldSetFlags()[2] ? this.start : (java.lang.Integer) defaultValue(fields()[2]);
        record.maximum = fieldSetFlags()[3] ? this.maximum : (java.lang.Integer) defaultValue(fields()[3]);
        record.outputDir = fieldSetFlags()[4] ? this.outputDir : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.format = fieldSetFlags()[5] ? this.format : (java.lang.CharSequence) defaultValue(fields()[5]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
